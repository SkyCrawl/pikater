/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileDetailsFrame.java
 *
 * Created on Mar 6, 2011, 2:27:33 PM
 */

package pikater.gui.java.improved;

import jade.gui.GuiAgent;
import jade.gui.GuiEvent;
import jade.util.leap.List;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.FastScatterPlot;
import org.jfree.chart.plot.Plot;
import pikater.ontology.messages.DataInstances;
import pikater.ontology.messages.GetData;
import pikater.ontology.messages.Instance;
import weka.gui.beans.ScatterPlotMatrix;

/**
 *
 * @author Martin Pilat
 */
public class FileDetailsFrame extends javax.swing.JFrame implements GuiConstants{

    GuiAgent myAgent;

    /** Creates new form FileDetailsFrame */

    DataInstances di;
    public FileDetailsFrame() {
        initComponents();
    }

    public FileDetailsFrame(String externalFilename, GuiAgent myAgent) {
        initComponents();

        this.myAgent = myAgent;
        GuiEvent ge = new GuiEvent(this, GET_DATA);
        ge.addParameter(externalFilename);
        myAgent.postGuiEvent(ge);
        
    }

    public void setInstances(DataInstances di) {
        jTable1.setModel(new DataInstancesTableModel(di));
        this.di = di;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        visualizationScrollPane = new javax.swing.JScrollPane();
        scatterPlotMatrix1 = new weka.gui.beans.ScatterPlotMatrix();

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentShown(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pikater/gui/java/improved/Strings"); // NOI18N
        jTabbedPane1.addTab(bundle.getString("DATA"), jPanel1); // NOI18N

        visualizationScrollPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                visualizationScrollPaneComponentShown(evt);
            }
        });
        visualizationScrollPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                visualizationScrollPaneFocusGained(evt);
            }
        });
        visualizationScrollPane.setViewportView(scatterPlotMatrix1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(visualizationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(visualizationScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(bundle.getString("VISALISATION"), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentShown


    }//GEN-LAST:event_jTabbedPane1ComponentShown

    private void visualizationScrollPaneComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_visualizationScrollPaneComponentShown

        System.err.println("handler");

        if (di == null)
            return;

        try {
            scatterPlotMatrix1.setInstances(di.toWekaInstances());
        }
        catch (Exception e) {
            e.printStackTrace();
        }

        


    }//GEN-LAST:event_visualizationScrollPaneComponentShown

    private void visualizationScrollPaneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_visualizationScrollPaneFocusGained
        visualizationScrollPaneComponentShown(evt);
    }//GEN-LAST:event_visualizationScrollPaneFocusGained

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
       visualizationScrollPaneComponentShown(null);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileDetailsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private weka.gui.beans.ScatterPlotMatrix scatterPlotMatrix1;
    private javax.swing.JScrollPane visualizationScrollPane;
    // End of variables declaration//GEN-END:variables

}
